version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: devops-chatbot-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-chatbot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-chatbot123}
      POSTGRES_DB: ${POSTGRES_DB:-devops_chatbot}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-chatbot}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: devops-chatbot-backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-chatbot}:${POSTGRES_PASSWORD:-chatbot123}@postgres:5432/${POSTGRES_DB:-devops_chatbot}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY:-}
      LANGCHAIN_TRACING_V2: ${LANGCHAIN_TRACING_V2:-false}
      LANGCHAIN_PROJECT: ${LANGCHAIN_PROJECT:-devops-chatbot}
      MCP_WEB_SEARCH_URL: ${MCP_WEB_SEARCH_URL:-http://localhost:3000}
    volumes:
      - ./data:/app/data
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: devops-chatbot-frontend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
    ports:
      - "3001:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
